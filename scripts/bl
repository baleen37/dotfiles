#!/usr/bin/env bash

# bl - Baleen's custom command dispatcher
# Usage: bl <command> [args...]

set -euo pipefail

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
  echo -e "${GREEN}[BL]${NC} $1"
}

print_warning() {
  echo -e "${YELLOW}[BL]${NC} $1"
}

print_error() {
  echo -e "${RED}[BL]${NC} $1"
}

print_header() {
  echo -e "${BLUE}[BL]${NC} $1"
}

# Get the directory where bl commands are stored
BL_DIR="$HOME/.bl/commands"

# Function to display usage
usage() {
  echo "bl - Baleen's custom command system"
  echo ""
  echo "Usage: bl <command> [args...]"
  echo ""
  echo "Available commands:"
  if [[ -d $BL_DIR ]]; then
    for cmd in "$BL_DIR"/*; do
      if [[ -f $cmd && -x $cmd ]]; then
        local cmd_name=$(basename "$cmd")
        echo "  $cmd_name"
      fi
    done
  else
    echo "  (no commands installed yet)"
  fi
  echo ""
  echo "Options:"
  echo "  -h, --help     Show this help message"
  echo "  list           List all available commands"
  echo "  install        Install bl command system"
  echo ""
  echo "Examples:"
  echo "  bl setup-dev my-project    # Initialize new Nix project"
  echo "  bl list                    # List available commands"
}

# Function to list commands
list_commands() {
  print_header "Available bl commands:"
  if [[ -d $BL_DIR ]]; then
    local found=false
    for cmd in "$BL_DIR"/*; do
      if [[ -f $cmd && -x $cmd ]]; then
        local cmd_name=$(basename "$cmd")
        echo "  bl $cmd_name"
        found=true
      fi
    done
    if [[ $found == "false" ]]; then
      echo "  (no commands installed yet)"
    fi
  else
    echo "  (no commands installed yet)"
    echo ""
    echo "Run 'bl install' to set up the command system."
  fi
}

# Function to install bl system
install_bl() {
  print_status "Installing bl command system..."

  # Create bl commands directory
  mkdir -p "$BL_DIR"

  # Copy setup-dev if it exists
  local dotfiles_setup_dev=""
  local script_dir="$(dirname "${BASH_SOURCE[0]}")"

  # Try multiple locations for setup-dev
  local possible_paths=(
    "$HOME/dotfiles/scripts/setup-dev"
    "$script_dir/setup-dev"
    "./scripts/setup-dev"
    "../scripts/setup-dev"
  )

  for path in "${possible_paths[@]}"; do
    if [[ -f $path && -x $path ]]; then
      dotfiles_setup_dev="$path"
      break
    fi
  done

  if [[ -n $dotfiles_setup_dev ]]; then
    cp "$dotfiles_setup_dev" "$BL_DIR/setup-dev"
    chmod +x "$BL_DIR/setup-dev"
    print_status "Installed: bl setup-dev"
  else
    print_warning "setup-dev script not found - will need to be installed manually"
  fi

  # Copy auto-update commands if they exist
  local dotfiles_scripts_dir=""
  if [[ -d "$HOME/dotfiles/scripts" ]]; then
    dotfiles_scripts_dir="$HOME/dotfiles/scripts"
  elif [[ -d "$(dirname "${BASH_SOURCE[0]}")" ]]; then
    dotfiles_scripts_dir="$(dirname "${BASH_SOURCE[0]}")"
  fi

  if [[ -n $dotfiles_scripts_dir ]]; then
    # Install bl-auto-update-* commands
    for cmd in "$dotfiles_scripts_dir"/bl-auto-update-*; do
      if [[ -f $cmd && -x $cmd ]]; then
        local cmd_name=$(basename "$cmd" | sed 's/^bl-//')
        cp "$cmd" "$BL_DIR/$cmd_name"
        chmod +x "$BL_DIR/$cmd_name"
        print_status "Installed: bl $cmd_name"
      fi
    done
  fi

  # Install bl itself to PATH
  local local_bin="$HOME/.local/bin"
  mkdir -p "$local_bin"

  # Copy this script to ~/.local/bin (avoid copying same file)
  local source_script="${BASH_SOURCE[0]}"
  local target_script="$local_bin/bl"

  if [[ $source_script != "$target_script" ]]; then
    cp "$source_script" "$target_script"
    chmod +x "$target_script"
  else
    print_status "bl already installed at: $target_script"
  fi

  print_status "bl command system installed!"

  # Check if ~/.local/bin is in PATH
  if [[ ":$PATH:" != *":$local_bin:"* ]]; then
    print_warning "$local_bin is not in your PATH."
    print_warning "Add this to your shell profile (~/.bashrc, ~/.zshrc):"
    echo 'export PATH="$HOME/.local/bin:$PATH"'
  else
    print_status "bl is now available globally!"
  fi

  echo ""
  print_header "Usage:"
  echo "  bl list           # List available commands"
  echo "  bl setup-dev      # Initialize Nix project"
  echo "  bl <command>      # Run any installed command"
}

# Parse command line arguments
case "${1:-}" in
"" | "-h" | "--help")
  usage
  exit 0
  ;;
"list")
  list_commands
  exit 0
  ;;
"install")
  install_bl
  exit 0
  ;;
*)
  COMMAND="$1"
  shift
  ;;
esac

# Check if bl directory exists
if [[ ! -d $BL_DIR ]]; then
  print_error "bl command system not installed."
  print_error "Run 'bl install' to set up the system."
  exit 1
fi

# Check if command exists
COMMAND_PATH="$BL_DIR/$COMMAND"
if [[ ! -f $COMMAND_PATH ]]; then
  print_error "Command '$COMMAND' not found."
  print_error "Run 'bl list' to see available commands."
  exit 1
fi

# Check if command is executable
if [[ ! -x $COMMAND_PATH ]]; then
  print_error "Command '$COMMAND' is not executable."
  exit 1
fi

# Execute the command
exec "$COMMAND_PATH" "$@"
