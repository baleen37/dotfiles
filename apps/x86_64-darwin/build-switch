#!/bin/sh -e

# Colors
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
BLUE='\033[1;34m'
DIM='\033[2m'
NC='\033[0m'

# Configuration
SYSTEM_TYPE="x86_64-darwin"
FLAKE_SYSTEM="darwinConfigurations.${SYSTEM_TYPE}.system"

# Environment setup
export NIXPKGS_ALLOW_UNFREE=1
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_MESSAGES=en_US.UTF-8

# Set USER if not already set
if [ -z "$USER" ]; then
    export USER=$(whoami)
fi

# Sudo session management
SUDO_ACQUIRED=false
SUDO_PID=""
CLEANUP_REGISTERED=false

# Parse arguments
VERBOSE=false
for arg in "$@"; do
    if [ "$arg" = "--verbose" ]; then
        VERBOSE=true
        break
    fi
done

# Logging functions
log_header() {
    echo ""
    echo "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo "${BLUE}  Nix Darwin Build & Switch${NC}"
    echo "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
}

log_step() {
    echo "${YELLOW}▶ $1${NC}"
}

log_info() {
    echo "${DIM}  $1${NC}"
}

log_warning() {
    echo "${YELLOW}⚠ $1${NC}" >&2
}

log_success() {
    echo "${GREEN}✓ $1${NC}"
}

log_error() {
    echo "${RED}✗ $1${NC}" >&2
}

log_footer() {
    echo ""
    echo "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    if [ "$1" = "success" ]; then
        echo "${GREEN}✓ Build & switch completed successfully${NC}"
    else
        echo "${RED}✗ Build & switch failed${NC}"
    fi
    echo "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
}

# Sudo management functions
check_current_privileges() {
    if [ "$(id -u)" -eq 0 ]; then
        log_info "Already running with administrator privileges"
        return 0
    else
        return 1
    fi
}

explain_sudo_requirement() {
    echo ""
    echo "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo "${BLUE}  Administrator Privileges Required${NC}"
    echo "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    echo "${YELLOW}Why are administrator privileges needed?${NC}"
    echo ""
    echo "• System configuration changes require elevated privileges"
    echo "• Darwin rebuild needs to modify system-level settings (see nix-darwin#1457)"
    echo "• Nix store operations may need root access"
    echo ""
    echo "${DIM}This will:${NC}"
    echo "${DIM}  1. Request your password once at the beginning${NC}"
    echo "${DIM}  2. Keep privileges active for the entire operation${NC}"
    echo "${DIM}  3. Automatically clean up when finished${NC}"
    echo ""
    echo "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
}

register_cleanup() {
    if [ "${CLEANUP_REGISTERED}" = "true" ]; then
        return 0
    fi

    trap 'cleanup_sudo_session' EXIT INT TERM
    CLEANUP_REGISTERED=true
    log_info "Cleanup handlers registered"
}

cleanup_sudo_session() {
    if [ "${SUDO_ACQUIRED}" = "true" ]; then
        log_step "Cleaning up administrator privileges"

        # Kill background sudo process if it exists
        if [ -n "${SUDO_PID}" ] && kill -0 "${SUDO_PID}" 2>/dev/null; then
            kill "${SUDO_PID}" 2>/dev/null || true
        fi

        # Reset sudo timestamp
        sudo -k 2>/dev/null || true

        log_success "Administrator privileges cleaned up"
        SUDO_ACQUIRED=false
        SUDO_PID=""
    fi
}

acquire_sudo_early() {
    # Skip if already root
    if check_current_privileges; then
        return 0
    fi

    # Check sudo availability
    if ! command -v sudo >/dev/null 2>&1; then
        log_error "sudo command not found. Please install sudo or run as root."
        return 1
    fi

    # Explain why we need sudo
    explain_sudo_requirement

    # Register cleanup handlers
    register_cleanup

    log_step "Requesting administrator privileges"

    # Request sudo access
    if ! sudo -v; then
        log_error "Failed to acquire administrator privileges"
        log_error "Please check your sudo configuration or contact your system administrator"
        return 1
    fi

    log_success "Administrator privileges acquired"

    # Keep sudo alive in background
    log_info "Keeping privileges active during operation..."
    (
        while true; do
            sleep 30
            sudo -n true 2>/dev/null || exit 1
        done
    ) &
    SUDO_PID=$!

    SUDO_ACQUIRED=true
    log_success "Privilege session established (valid for 60 minutes)"
    return 0
}

get_sudo_prefix() {
    if check_current_privileges; then
        echo ""
    else
        echo "sudo -E USER=\"$USER\""
    fi
}

# Early privilege acquisition
if ! acquire_sudo_early; then
    log_error "Cannot proceed without administrator privileges"
    exit 1
fi

# Main execution
log_header

# Build phase
log_step "Building system configuration"
log_info "Target: ${SYSTEM_TYPE}"
log_info "User: ${USER}"

if [ "$VERBOSE" = "true" ]; then
    nix --extra-experimental-features 'nix-command flakes' build --impure .#$FLAKE_SYSTEM $@
else
    nix --extra-experimental-features 'nix-command flakes' build --impure .#$FLAKE_SYSTEM $@ 2>/dev/null || {
        log_error "Build failed. Run with --verbose for details"
        log_footer "failed"
        exit 1
    }
fi
log_success "Build completed"

# Switch phase
echo ""
log_step "Applying system configuration"
log_info "Using pre-acquired administrator privileges"

SUDO_PREFIX=$(get_sudo_prefix)

if [ "$VERBOSE" = "true" ]; then
    log_info "Command: darwin-rebuild switch --impure --flake .#${SYSTEM_TYPE}"
    # See https://github.com/nix-darwin/nix-darwin/issues/1457 on why we need sudo
    if [ -n "${SUDO_PREFIX}" ]; then
        ${SUDO_PREFIX} ./result/sw/bin/darwin-rebuild switch --impure --flake .#${SYSTEM_TYPE} $@ 2>&1 || {
            log_error "Switch failed (exit code: $?)"
            log_footer "failed"
            exit 1
        }
    else
        USER="$USER" ./result/sw/bin/darwin-rebuild switch --impure --flake .#${SYSTEM_TYPE} $@ 2>&1 || {
            log_error "Switch failed (exit code: $?)"
            log_footer "failed"
            exit 1
        }
    fi
else
    if [ -n "${SUDO_PREFIX}" ]; then
        ${SUDO_PREFIX} ./result/sw/bin/darwin-rebuild switch --impure --flake .#${SYSTEM_TYPE} $@ >/dev/null 2>&1 || {
            log_error "Switch failed. Run with --verbose for details"
            log_footer "failed"
            exit 1
        }
    else
        USER="$USER" ./result/sw/bin/darwin-rebuild switch --impure --flake .#${SYSTEM_TYPE} $@ >/dev/null 2>&1 || {
            log_error "Switch failed. Run with --verbose for details"
            log_footer "failed"
            exit 1
        }
    fi
fi
log_success "Configuration applied"

# Cleanup phase
echo ""
log_step "Cleaning up"
unlink ./result >/dev/null 2>&1
log_success "Cleanup completed"

# Done
log_footer "success"
if [ "$VERBOSE" = "false" ]; then
    echo "${DIM}Tip: Use --verbose for detailed output${NC}"
fi
