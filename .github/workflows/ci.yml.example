# 개선된 CI 워크플로우 예시
name: CI (Improved)
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 1단계: 빠른 검증 (1-2분)
  validate:
    name: Validate & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Lint & Validate
        run: |
          export USER=${USER:-ci}
          nix-shell -p pre-commit --run "pre-commit run --all-files"
          nix flake check --impure --no-build --all-systems

  # 2단계: 실제 빌드 (병렬)
  build:
    name: Build ${{ matrix.name }}
    needs: validate
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Darwin ARM64"
            system: aarch64-darwin
            os: macos-latest
            command: "nix build --impure --no-link .#darwinConfigurations.aarch64-darwin.system"
          - name: "Linux x64"
            system: x86_64-linux
            os: ubuntu-latest
            command: "nix build --impure --no-link .#nixosConfigurations.x86_64-linux.config.system.build.toplevel"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Build configuration
        timeout-minutes: 20
        run: |
          export USER=${USER:-ci}
          echo "🏗️ Building ${{ matrix.name }}"
          ${{ matrix.command }}

  # 3단계: 테스트 (크로스 플랫폼)
  test:
    name: Test ${{ matrix.category }} (${{ matrix.os }})
    needs: [validate, build]
    strategy:
      fail-fast: false
      matrix:
        category: [unit, integration, perf]
        include:
          - os: macos-latest
            system: aarch64-darwin
          - os: ubuntu-latest
            system: x86_64-linux
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Run tests
        timeout-minutes: 10
        run: |
          export USER=${USER:-ci}
          echo "🧪 Running ${{ matrix.category }} tests on ${{ matrix.os }}"
          nix run --impure .#test-${{ matrix.category }}

  # 4단계: Security 검사 (선택)
  security:
    name: Security Scan
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Security checks
        run: |
          export USER=${USER:-ci}
          # sudo 보안 테스트만 실행
          nix build --impure .#checks.x86_64-linux.sudo_security_test
