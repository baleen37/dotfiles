# .github/workflows/test.yml
name: CI

permissions:
  contents: read         # repo 내용 접근

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  lint-build-test:
    strategy:
      matrix:
        include:
          - os: macos-latest
            kind: darwin
            flake_attr: darwinConfigurations
          - os: ubuntu-latest
            kind: linux
            flake_attr: homeConfigurations
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Nix smoke test
        run: |
          nix --version
          nix flake show

      - name: Build all outputs
        run: |
          nix build --impure --no-link

      - name: Run nvim (smoke test)
        run: |
          ./result/bin/nvim --version

      - name: Query flake hosts/archs
        id: flake-hosts
        run: |
          if [ "${{ matrix.kind }}" = "darwin" ]; then
            nix eval --json '.#darwinConfigurations' | jq -r 'keys[]' > hosts.txt
          else
            nix eval --json '.#homeConfigurations' | jq -r 'keys[]' > hosts.txt
          fi
          cat hosts.txt

      - name: Dry-run build for all hosts/archs
        run: |
          while read host; do
            if [ "${{ matrix.kind }}" = "darwin" ]; then
              echo "Testing darwin host: $host"
              darwin-rebuild build --flake ".#$host"
            else
              echo "Testing linux home-manager: $host"
              nix build ".#homeConfigurations.$host.activationPackage"
            fi
          done < hosts.txt

      - name: Nvim smoke test for all home-manager hosts/archs
        run: |
          while read host; do
            if [ "${{ matrix.kind }}" = "linux" ] || [ "${{ matrix.kind }}" = "darwin" ]; then
              echo "Testing nvim for home-manager: $host"
              nix build ".#homeConfigurations.$host.activationPackage"
              # Try to activate the environment and run nvim --version
              if [ -f result/activate ]; then
                . ./result/activate || true
              fi
              if command -v nvim >/dev/null 2>&1; then
                nvim --version
              else
                echo "nvim not found in PATH after activation for $host" >&2
                exit 1
              fi
            fi
          done < hosts.txt

      - name: Run tests
        run: nix flake check
