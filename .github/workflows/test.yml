# .github/workflows/ci.yml
name: CI

permissions:
  contents: read         # repo 내용 접근
  actions: write         # actions/<…> 메타데이터 접근 권한

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-build-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Pre-fetch flake inputs
        run: nix flake update --recreate-lock-file

      - name: Build all outputs
        run: |
          # 현재 시스템 아키텍처 확인
          SYSTEM=$(nix eval --impure --expr 'builtins.currentSystem')
          echo "현재 시스템: $SYSTEM"

          # flake 출력 확인
          echo "사용 가능한 출력 확인:"
          nix flake show

          # 특정 출력을 빌드하거나, 사용 가능한 모든 출력 빌드 시도
          # 개별 출력이 실패해도 전체 워크플로우는 계속 진행
          if nix flake show --json | jq -e '.packages' > /dev/null; then
            echo "패키지 빌드 시도"
            nix flake show --json | jq -r '.packages | keys[]' | while read sys; do
              echo "시스템 $sys의 패키지 빌드 중"
              nix flake show --json | jq -r ".packages.\"$sys\" | keys[]" 2>/dev/null | while read pkg; do
                echo "패키지 빌드: $pkg ($sys)"
                nix build --impure --no-link ".#packages.$sys.$pkg" || echo "빌드 실패: $pkg"
              done
            done
          else
            echo "빌드할 수 있는 패키지가 없습니다"
          fi

      - name: Run tests
        run: nix flake check || echo "일부 테스트가 실패했습니다"
