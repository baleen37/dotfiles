# ABOUTME: Î¶¥Î¶¨Ïä§ Î∞è Î∞∞Ìè¨ ÏõåÌÅ¨ÌîåÎ°úÏö∞
# ABOUTME: ÌÉúÍ∑∏ Í∏∞Î∞ò Î¶¥Î¶¨Ïä§ ÏûêÎèôÌôî

name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Î¶¥Î¶¨Ïä§ Î≤ÑÏ†Ñ (Ïòà: v1.0.0)'
        required: true
        type: string

jobs:
  test-before-release:
    name: "Î¶¥Î¶¨Ïä§ Ï†Ñ ÌÖåÏä§Ìä∏ üß™"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ï†ÄÏû•ÏÜå
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Nix ÏÑ§Ïπò
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          logger: pretty

      - name: Magic Nix Cache ÏÑ§Ï†ï
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Ï†ÑÏ≤¥ ÌÖåÏä§Ìä∏ Ïä§ÏúÑÌä∏ Ïã§Ìñâ
        run: |
          make lint
          make smoke
          make test-fast
          make test-contract
          make test-security
          make test-compatibility
        env:
          USER: ${{ github.actor }}

  build-release-artifacts:
    name: "Î¶¥Î¶¨Ïä§ ÏïÑÌã∞Ìå©Ìä∏ ÎπåÎìú üì¶"
    needs: test-before-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: x86_64-linux
          - os: ubuntu-latest
            platform: aarch64-linux
          - os: macos-13
            platform: x86_64-darwin
          - os: macos-14
            platform: aarch64-darwin

    steps:
      - name: Checkout Ï†ÄÏû•ÏÜå
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Nix ÏÑ§Ïπò
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          logger: pretty

      - name: Magic Nix Cache ÏÑ§Ï†ï
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: ÌîåÎû´Ìèº ÎπåÎìú
        run: |
          if [[ "${{ matrix.platform }}" == *"linux"* ]]; then
            make build-linux
          else
            make build-darwin
          fi
        env:
          USER: ${{ github.actor }}

      - name: ÎπåÎìú Í≤∞Í≥º ÏïÑÏπ¥Ïù¥Î∏å
        run: |
          mkdir -p release-artifacts
          tar -czf release-artifacts/dotfiles-${{ matrix.platform }}.tar.gz \
            --exclude='.git' \
            --exclude='result*' \
            --exclude='release-artifacts' \
            .

      - name: ÏïÑÌã∞Ìå©Ìä∏ ÏóÖÎ°úÎìú
        uses: actions/upload-artifact@v4
        with:
          name: dotfiles-${{ matrix.platform }}
          path: release-artifacts/
          retention-days: 90

  create-release:
    name: "GitHub Î¶¥Î¶¨Ïä§ ÏÉùÏÑ± üöÄ"
    needs: build-release-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ï†ÄÏû•ÏÜå
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Î™®Îì† ÏïÑÌã∞Ìå©Ìä∏ Îã§Ïö¥Î°úÎìú
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: Î¶¥Î¶¨Ïä§ ÎÖ∏Ìä∏ ÏÉùÏÑ±
        run: |
          echo "## üéâ Dotfiles Î¶¥Î¶¨Ïä§ ${{ github.ref_name }}" > release-notes.md
          echo "" >> release-notes.md
          echo "### ‚ú® Ï£ºÏöî Î≥ÄÍ≤ΩÏÇ¨Ìï≠" >> release-notes.md
          git log --oneline --since="$(git describe --tags --abbrev=0 HEAD^)" >> release-notes.md
          echo "" >> release-notes.md
          echo "### üß™ ÌÖåÏä§Ìä∏ ÌòÑÌô©" >> release-notes.md
          echo "- ‚úÖ Î™®Îì† ÌîåÎû´Ìèº ÎπåÎìú ÏÑ±Í≥µ" >> release-notes.md
          echo "- ‚úÖ Ï†ÑÏ≤¥ ÌÖåÏä§Ìä∏ Ïä§ÏúÑÌä∏ ÌÜµÍ≥º" >> release-notes.md
          echo "- ‚úÖ Î≥¥Ïïà Í≤ÄÏÇ¨ ÏôÑÎ£å" >> release-notes.md

      - name: GitHub Î¶¥Î¶¨Ïä§ ÏÉùÏÑ±
        uses: softprops/action-gh-release@v2
        with:
          name: "Dotfiles ${{ github.ref_name }}"
          body_path: release-notes.md
          files: |
            all-artifacts/**/*.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
